# Makefile.in generated by automake 1.11.1 from Makefile.am.
# src/ptest/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006, 2007, 2008, 2009  Free Software Foundation,
# Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.




pkgdatadir = $(datadir)/Coin
pkgincludedir = $(includedir)/Coin
pkglibdir = $(libdir)/Coin
pkglibexecdir = $(libexecdir)/Coin
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = i686-pc-mingw32
host_triplet = i686-pc-mingw32
DIST_COMMON = $(srcdir)/Makefile.am $(srcdir)/Makefile.in \
	$(top_srcdir)/src/Makefile.include
am__append_1 =  \
	-I$(top_srcdir)/src/leveldb/include \
	-I$(top_srcdir)/src/leveldb/helpers/memenv
am__append_2 = $(top_builddir)/src/leveldb/libleveldb.a
am__append_3 = $(top_builddir)/src/leveldb/libmemenv.a
bin_PROGRAMS = coin_ptest$(EXEEXT)
subdir = src/ptest
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/src/m4/ax_boost_base.m4 \
	$(top_srcdir)/src/m4/ax_boost_chrono.m4 \
	$(top_srcdir)/src/m4/ax_boost_filesystem.m4 \
	$(top_srcdir)/src/m4/ax_boost_program_options.m4 \
	$(top_srcdir)/src/m4/ax_boost_system.m4 \
	$(top_srcdir)/src/m4/ax_boost_thread.m4 \
	$(top_srcdir)/src/m4/ax_boost_unit_test_framework.m4 \
	$(top_srcdir)/src/m4/ax_check_compile_flag.m4 \
	$(top_srcdir)/src/m4/ax_check_link_flag.m4 \
	$(top_srcdir)/src/m4/ax_check_preproc_flag.m4 \
	$(top_srcdir)/src/m4/ax_pthread.m4 \
	$(top_srcdir)/src/m4/bitcoin_qt.m4 \
	$(top_srcdir)/src/m4/bitcoin_subdir_to_include.m4 \
	$(top_srcdir)/src/m4/talents_find_bdb48.m4 \
	$(top_srcdir)/pkg.m4 $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/src/coin-config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
am__installdirs = "$(DESTDIR)$(bindir)"
PROGRAMS = $(bin_PROGRAMS)
am__dirstamp = $(am__leading_dot)dirstamp
am_coin_ptest_OBJECTS = coin_ptest-p_test.$(OBJEXT) \
	coin_ptest-main_tests.$(OBJEXT) \
	coin_ptest-UpdateAccount_tests.$(OBJEXT) \
	coin_ptest-mining_tests.$(OBJEXT) \
	coin_ptest-create_tx_tests.$(OBJEXT) \
	coin_ptest-black_halo_tests.$(OBJEXT) \
	coin_ptest-anony_tests.$(OBJEXT) \
	../test/coin_ptest-systestbase.$(OBJEXT) \
	coin_ptest-cycle_sesure_trade_tests.$(OBJEXT) \
	coin_ptest-cycle_test_base.$(OBJEXT) \
	coin_ptest-cycle_test_manger.$(OBJEXT) \
	coin_ptest-cycle_p2p_bet_tests.$(OBJEXT) \
	coin_ptest-create_minter_key_tests.$(OBJEXT) \
	coin_ptest-ipo_tests.$(OBJEXT) \
	coin_ptest-red_packet_tests.$(OBJEXT) \
	coin_ptest-guarantee_tests.$(OBJEXT) \
	coin_ptest-lashou_tests.$(OBJEXT)
coin_ptest_OBJECTS = $(am_coin_ptest_OBJECTS)
am__DEPENDENCIES_1 = $(am__append_2)
am__DEPENDENCIES_2 = $(am__append_3)
am__DEPENDENCIES_3 =
coin_ptest_DEPENDENCIES = $(LIBBITCOIN_SERVER) $(LIBBITCOIN_WALLET) \
	$(LIBBITCOIN_CLI) $(LIBBITCOIN_COMMON) $(LIBLUA53) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_2) \
	$(am__DEPENDENCIES_3) $(am__DEPENDENCIES_3) \
	$(am__DEPENDENCIES_3)
DEFAULT_INCLUDES = -I. -I$(top_builddir)/src
depcomp = $(SHELL) $(top_srcdir)/src/build-aux/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
AM_V_lt = $(am__v_lt_$(V))
am__v_lt_ = $(am__v_lt_$(AM_DEFAULT_VERBOSITY))
am__v_lt_0 = --silent
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
AM_V_CXX = $(am__v_CXX_$(V))
am__v_CXX_ = $(am__v_CXX_$(AM_DEFAULT_VERBOSITY))
am__v_CXX_0 = @echo "  CXX   " $@;
AM_V_at = $(am__v_at_$(V))
am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))
am__v_at_0 = @
CXXLD = $(CXX)
CXXLINK = $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) \
	-o $@
AM_V_CXXLD = $(am__v_CXXLD_$(V))
am__v_CXXLD_ = $(am__v_CXXLD_$(AM_DEFAULT_VERBOSITY))
am__v_CXXLD_0 = @echo "  CXXLD " $@;
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
AM_V_CC = $(am__v_CC_$(V))
am__v_CC_ = $(am__v_CC_$(AM_DEFAULT_VERBOSITY))
am__v_CC_0 = @echo "  CC    " $@;
CCLD = $(CC)
LINK = $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CCLD = $(am__v_CCLD_$(V))
am__v_CCLD_ = $(am__v_CCLD_$(AM_DEFAULT_VERBOSITY))
am__v_CCLD_0 = @echo "  CCLD  " $@;
AM_V_GEN = $(am__v_GEN_$(V))
am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))
am__v_GEN_0 = @echo "  GEN   " $@;
SOURCES = $(coin_ptest_SOURCES)
DIST_SOURCES = $(coin_ptest_SOURCES)
ETAGS = etags
CTAGS = ctags
am__tty_colors = \
red=; grn=; lgn=; blu=; std=
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = ${SHELL} /e/BaiduYunDownload/onelink/olcoin/src/build-aux/missing --run aclocal-1.11
AMTAR = ${SHELL} /e/BaiduYunDownload/onelink/olcoin/src/build-aux/missing --run tar
AM_DEFAULT_VERBOSITY = 0
AR = /c/mingw32/bin/ar
AUTOCONF = ${SHELL} /e/BaiduYunDownload/onelink/olcoin/src/build-aux/missing --run autoconf
AUTOHEADER = ${SHELL} /e/BaiduYunDownload/onelink/olcoin/src/build-aux/missing --run autoheader
AUTOMAKE = ${SHELL} /e/BaiduYunDownload/onelink/olcoin/src/build-aux/missing --run automake-1.11
AWK = gawk
BDB_CPPFLAGS = 
BDB_LIBS = -ldb_cxx
BOOST_CHRONO_LIB = -lboost_chrono-mgw48-mt-s-1_55 
BOOST_CPPFLAGS = -mthreads 
BOOST_FILESYSTEM_LIB = -lboost_filesystem-mgw48-mt-s-1_55
BOOST_LDFLAGS = -L/c/deps/boost_1_55_0/stage/lib
BOOST_LIBS = -L/c/deps/boost_1_55_0/stage/lib -lboost_system-mgw48-mt-s-1_55 -lboost_filesystem-mgw48-mt-s-1_55 -lboost_program_options-mgw48-mt-s-1_55 -lboost_thread-mgw48-mt-s-1_55 -lboost_chrono-mgw48-mt-s-1_55 
BOOST_PROGRAM_OPTIONS_LIB = -lboost_program_options-mgw48-mt-s-1_55
BOOST_SYSTEM_LIB = -lboost_system-mgw48-mt-s-1_55
BOOST_THREAD_LIB = -lboost_thread-mgw48-mt-s-1_55
BOOST_UNIT_TEST_FRAMEWORK_LIB = 
BREW = 
BUILD_P_TEST = 
BUILD_QT = 
BUILD_TEST = 
BUILD_TEST_QT = 
CC = gcc
CCACHE = 
CCDEPMODE = depmode=gcc3
CFLAGS = -g3 -O0 -DDEBUG
CLIENT_VERSION_BUILD = 9
CLIENT_VERSION_IS_RELEASE = true
CLIENT_VERSION_MAJOR = 1
CLIENT_VERSION_MINOR = 0
CLIENT_VERSION_REVISION = 0
COMPARISON_TOOL_REORG_TESTS = 0
COPYRIGHT_YEAR = 2016
CPPFLAGS = -I/c/deps/boost_1_55_0 -I/c/deps/db-4.8.30.NC/build_unix -I/c/deps/openssl-1.0.1g/include -I/c/deps -I/c/deps/protobuf-2.5.0/src -I/c/deps/libpng-1.6.9 -I/c/deps/qrencode-3.4.3 -std=c++11  -DBOOST_SPIRIT_THREADSAFE -DHAVE_BUILD_INFO -D__STDC_FORMAT_MACROS -D_MT -DWIN32 -D_WINDOWS -DBOOST_THREAD_USE_LIB -D_FILE_OFFSET_BITS=64  -U_FORTIFY_SOURCE -D_FORTIFY_SOURCE=2 -DSTATICLIB
CRYPTO_CFLAGS = 
CRYPTO_LIBS = 
CXX = g++
CXXCPP = g++ -E
CXXDEPMODE = depmode=gcc3
CXXFLAGS = -g3 -O0 -DDEBUG  -Wstack-protector -fstack-protector-all
CYGPATH_W = echo
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /bin/grep -E
EXEEXT = .exe
GCOV = /c/mingw32/bin/gcov
GENHTML = 
GENISOIMAGE = 
GIT = /c/Program Files (x86)/Git/cmd/git
GREP = /bin/grep
HEXDUMP = /c/mingw32/bin/hexdump
INCLUDES =  
INSTALL = /bin/install -c
INSTALLNAMETOOL = 
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
JAVA = /e/developer/java/jdk1.6.0_45/bin/java
JAVA_COMPARISON_TOOL = 
LCOV = 
LDFLAGS = -L/c/deps/boost_1_55_0/stage/lib -L/c/deps/db-4.8.30.NC/build_unix -L/c/deps/openssl-1.0.1g -L/c/deps/miniupnpc -L/c/deps/protobuf-2.5.0/src/.libs -L/c/deps/libpng-1.6.9/.libs -L/c/deps/qrencode-3.4.3/.libs -static -static-libgcc -static-libstdc++ -Wl,--large-address-aware  -Wl,--dynamicbase -Wl,--nxcompat
LEVELDB_CPPFLAGS =  $(am__append_1)
LEVELDB_TARGET_FLAGS = TARGET_OS=OS_WINDOWS_CROSSCOMPILE
LIBLEVELDB =  $(am__append_2)
LIBMEMENV =  $(am__append_3)
LIBOBJS = 
LIBS = -lssl -lcrypto -lminiupnpc -lminiupnpc -lminiupnpc -lminiupnpc -lssp -lcrypt32 -liphlpapi -lshlwapi -lmswsock -lws2_32 -ladvapi32 -lrpcrt4 -luuid -loleaut32 -lole32 -lcomctl32 -lshell32 -lwinmm -lwinspool -lcomdlg32 -lgdi32 -luser32 -lkernel32 -lmingwthrd 
LN_S = cp -p
LRELEASE = 
LTLIBOBJS = 
LUPDATE = 
MAINT = 
MAKEINFO = ${SHELL} /e/BaiduYunDownload/onelink/olcoin/src/build-aux/missing --run makeinfo
MAKENSIS = none
MKDIR_P = /bin/mkdir -p
MOC = 
MOC_DEFS = -DHAVE_CONFIG_H -I$(top_srcdir)/src
OBJC = gcc
OBJCDEPMODE = depmode=gcc3
OBJCFLAGS = -g -O2
OBJCXX = g++
OBJCXXFLAGS = -g3 -O0 -DDEBUG  -Wstack-protector -fstack-protector-all
OBJEXT = o
OTOOL = 
PACKAGE = Coin
PACKAGE_BUGREPORT = coin@163.com
PACKAGE_NAME = Coin Core
PACKAGE_STRING = Coin Core 1.0.0
PACKAGE_TARNAME = Coin
PACKAGE_URL = 
PACKAGE_VERSION = 1.0.0
PATH_SEPARATOR = :
PKG_CONFIG = 
PKG_CONFIG_LIBDIR = 
PKG_CONFIG_PATH = 
PORT = 
PROTOBUF_CFLAGS = 
PROTOBUF_LIBS = 
PROTOC = 
PTHREAD_CC = gcc
PTHREAD_CFLAGS = 
PTHREAD_LIBS = 
QR_CFLAGS = 
QR_LIBS = 
QT_CFLAGS = 
QT_DBUS_CFLAGS = 
QT_DBUS_INCLUDES = 
QT_DBUS_LIBS = 
QT_INCLUDES = 
QT_LDFLAGS = 
QT_LIBS = 
QT_SELECT = qt
QT_TEST_CFLAGS = 
QT_TEST_INCLUDES = 
QT_TEST_LIBS = 
RANLIB = /c/mingw32/bin/ranlib
RCC = 
SED = /bin/sed
SET_MAKE = 
SHELL = /bin/sh
SSL_CFLAGS = 
SSL_LIBS = 
STRIP = /c/mingw32/bin/strip
TESTDEFS = 
UIC = 
USE_QRCODE = 
USE_UPNP = 
VERSION = 1.0.0
WINDOWS_BITS = 32
WINDRES = /c/mingw32/bin/windres
XGETTEXT = 
abs_builddir = /e/BaiduYunDownload/onelink/olcoin/src/ptest
abs_srcdir = /e/BaiduYunDownload/onelink/olcoin/src/ptest
abs_top_builddir = /e/BaiduYunDownload/onelink/olcoin
abs_top_srcdir = /e/BaiduYunDownload/onelink/olcoin
ac_ct_CC = gcc
ac_ct_CXX = g++
ac_ct_OBJC = gcc
ac_ct_OBJCXX = g++
am__include = include
am__leading_dot = .
am__quote = 
am__tar = ${AMTAR} chof - "$$tardir"
am__untar = ${AMTAR} xf -
ax_pthread_config = 
bindir = ${exec_prefix}/bin
build = i686-pc-mingw32
build_alias = 
build_cpu = i686
build_os = mingw32
build_vendor = pc
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = ${prefix}
host = i686-pc-mingw32
host_alias = 
host_cpu = i686
host_os = mingw32
host_vendor = pc
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = ${SHELL} /e/BaiduYunDownload/onelink/olcoin/src/build-aux/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
mandir = ${datarootdir}/man
mkdir_p = /bin/mkdir -p
oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = /usr/local
program_transform_name = s,x,x,
psdir = ${docdir}
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = .
sysconfdir = ${prefix}/etc
target_alias = 
top_build_prefix = ../../
top_builddir = ../..
top_srcdir = ../..

#  AM_CPPFLAGS += -fPIC

#  $(BOOST_CPPFLAGS) $(BOOST_INCLUDES) -fPIC
AM_CPPFLAGS = $(INCLUDES) -I$(top_builddir)/src/obj $(BDB_CPPFLAGS) \
	$(BOOST_CPPFLAGS) $(BOOST_INCLUDES) $(LEVELDB_CPPFLAGS) \
	-I$(top_srcdir)/src
AM_LDFLAGS = $(PTHREAD_CFLAGS)
LIBBITCOIN_SERVER = $(top_builddir)/src/libcoin_server.a
LIBBITCOIN_WALLET = $(top_builddir)/src/libcoin_wallet.a
LIBBITCOIN_COMMON = $(top_builddir)/src/libcoin_common.a
LIBBITCOIN_CLI = $(top_builddir)/src/libcoin_cli.a
LIBBITCOINQT = $(top_builddir)/src/qt/libcoinqt.a
LIBLUA53 = $(top_builddir)/src/liblua53.a
TESTS = test

# test_bitcoin binary #
coin_ptest_CPPFLAGS = $(AM_CPPFLAGS) $(TESTDEFS)
#if ENABLE_WALLET
#coin_ptest_LDADD += $(LIBBITCOIN_WALLET)
#endif
coin_ptest_LDADD = $(LIBBITCOIN_SERVER) $(LIBBITCOIN_WALLET) \
	$(LIBBITCOIN_CLI) $(LIBBITCOIN_COMMON) $(LIBLUA53) \
	$(LIBLEVELDB) $(LIBMEMENV) $(BOOST_LIBS) \
	$(BOOST_UNIT_TEST_FRAMEWORK_LIB) $(BDB_LIBS)
coin_ptest_SOURCES = \
  p_test.cpp \
  main_tests.cpp \
  UpdateAccount_tests.cpp \
  mining_tests.cpp	\
  create_tx_tests.cpp \
  black_halo_tests.cpp	\
  anony_tests.cpp     \
  ../test/systestbase.cpp \
  cycle_sesure_trade_tests.cpp	\
  cycle_test_base.cpp	\
  cycle_test_manger.cpp \
  cycle_test_manger.h	\
  cycle_test_base.h	\
  cycle_sesure_trade_tests.h	\
  black_halo_tests.h	\
  anony_tests.h   \
  create_tx_tests.h  \
  ../test/systestbase.h \
  cycle_p2p_bet_tests.cpp \
  cycle_p2p_bet_tests.h \
  create_minter_key_tests.cpp \
  create_minter_key_tests.h  \
  ipo_tests.h \
  ipo_tests.cpp \
  red_packet_tests.cpp \
  guarantee_tests.h \
  guarantee_tests.cpp\
  lashou_tests.cpp\
  lashou_tests.h

all: all-am

.SUFFIXES:
.SUFFIXES: .cpp .mm .o .obj .rc
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am $(top_srcdir)/src/Makefile.include $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign src/ptest/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --foreign src/ptest/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	test -z "$(bindir)" || $(MKDIR_P) "$(DESTDIR)$(bindir)"
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	for p in $$list; do echo "$$p $$p"; done | \
	sed 's/$(EXEEXT)$$//' | \
	while read p p1; do if test -f $$p; \
	  then echo "$$p"; echo "$$p"; else :; fi; \
	done | \
	sed -e 'p;s,.*/,,;n;h' -e 's|.*|.|' \
	    -e 'p;x;s,.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/' | \
	sed 'N;N;N;s,\n, ,g' | \
	$(AWK) 'BEGIN { files["."] = ""; dirs["."] = 1 } \
	  { d=$$3; if (dirs[d] != 1) { print "d", d; dirs[d] = 1 } \
	    if ($$2 == $$4) files[d] = files[d] " " $$1; \
	    else { print "f", $$3 "/" $$4, $$1; } } \
	  END { for (d in files) print "f", d, files[d] }' | \
	while read type dir files; do \
	    if test "$$dir" = .; then dir=; else dir=/$$dir; fi; \
	    test -z "$$files" || { \
	      echo " $(INSTALL_PROGRAM_ENV) $(INSTALL_PROGRAM) $$files '$(DESTDIR)$(bindir)$$dir'"; \
	      $(INSTALL_PROGRAM_ENV) $(INSTALL_PROGRAM) $$files "$(DESTDIR)$(bindir)$$dir" || exit $$?; \
	    } \
	; done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	files=`for p in $$list; do echo "$$p"; done | \
	  sed -e 'h;s,^.*/,,;s/$(EXEEXT)$$//;$(transform)' \
	      -e 's/$$/$(EXEEXT)/' `; \
	test -n "$$list" || exit 0; \
	echo " ( cd '$(DESTDIR)$(bindir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(bindir)" && rm -f $$files

clean-binPROGRAMS:
	-test -z "$(bin_PROGRAMS)" || rm -f $(bin_PROGRAMS)
../test/$(am__dirstamp):
	@$(MKDIR_P) ../test
	@: > ../test/$(am__dirstamp)
../test/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) ../test/$(DEPDIR)
	@: > ../test/$(DEPDIR)/$(am__dirstamp)
../test/coin_ptest-systestbase.$(OBJEXT): ../test/$(am__dirstamp) \
	../test/$(DEPDIR)/$(am__dirstamp)
coin_ptest$(EXEEXT): $(coin_ptest_OBJECTS) $(coin_ptest_DEPENDENCIES) 
	@rm -f coin_ptest$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(coin_ptest_OBJECTS) $(coin_ptest_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)
	-rm -f ../test/coin_ptest-systestbase.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ../test/$(DEPDIR)/coin_ptest-systestbase.Po
include ./$(DEPDIR)/coin_ptest-UpdateAccount_tests.Po
include ./$(DEPDIR)/coin_ptest-anony_tests.Po
include ./$(DEPDIR)/coin_ptest-black_halo_tests.Po
include ./$(DEPDIR)/coin_ptest-create_minter_key_tests.Po
include ./$(DEPDIR)/coin_ptest-create_tx_tests.Po
include ./$(DEPDIR)/coin_ptest-cycle_p2p_bet_tests.Po
include ./$(DEPDIR)/coin_ptest-cycle_sesure_trade_tests.Po
include ./$(DEPDIR)/coin_ptest-cycle_test_base.Po
include ./$(DEPDIR)/coin_ptest-cycle_test_manger.Po
include ./$(DEPDIR)/coin_ptest-guarantee_tests.Po
include ./$(DEPDIR)/coin_ptest-ipo_tests.Po
include ./$(DEPDIR)/coin_ptest-lashou_tests.Po
include ./$(DEPDIR)/coin_ptest-main_tests.Po
include ./$(DEPDIR)/coin_ptest-mining_tests.Po
include ./$(DEPDIR)/coin_ptest-p_test.Po
include ./$(DEPDIR)/coin_ptest-red_packet_tests.Po

.cpp.o:
	$(AM_V_CXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.o$$||'`;\
	$(CXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
	$(am__mv) $$depbase.Tpo $$depbase.Po
#	$(AM_V_CXX) \
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXXCOMPILE) -c -o $@ $<

.cpp.obj:
	$(AM_V_CXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.obj$$||'`;\
	$(CXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ `$(CYGPATH_W) '$<'` &&\
	$(am__mv) $$depbase.Tpo $$depbase.Po
#	$(AM_V_CXX) \
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

coin_ptest-p_test.o: p_test.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(coin_ptest_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT coin_ptest-p_test.o -MD -MP -MF $(DEPDIR)/coin_ptest-p_test.Tpo -c -o coin_ptest-p_test.o `test -f 'p_test.cpp' || echo '$(srcdir)/'`p_test.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/coin_ptest-p_test.Tpo $(DEPDIR)/coin_ptest-p_test.Po
#	$(AM_V_CXX) \
#	source='p_test.cpp' object='coin_ptest-p_test.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(coin_ptest_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o coin_ptest-p_test.o `test -f 'p_test.cpp' || echo '$(srcdir)/'`p_test.cpp

coin_ptest-p_test.obj: p_test.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(coin_ptest_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT coin_ptest-p_test.obj -MD -MP -MF $(DEPDIR)/coin_ptest-p_test.Tpo -c -o coin_ptest-p_test.obj `if test -f 'p_test.cpp'; then $(CYGPATH_W) 'p_test.cpp'; else $(CYGPATH_W) '$(srcdir)/p_test.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/coin_ptest-p_test.Tpo $(DEPDIR)/coin_ptest-p_test.Po
#	$(AM_V_CXX) \
#	source='p_test.cpp' object='coin_ptest-p_test.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(coin_ptest_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o coin_ptest-p_test.obj `if test -f 'p_test.cpp'; then $(CYGPATH_W) 'p_test.cpp'; else $(CYGPATH_W) '$(srcdir)/p_test.cpp'; fi`

coin_ptest-main_tests.o: main_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(coin_ptest_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT coin_ptest-main_tests.o -MD -MP -MF $(DEPDIR)/coin_ptest-main_tests.Tpo -c -o coin_ptest-main_tests.o `test -f 'main_tests.cpp' || echo '$(srcdir)/'`main_tests.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/coin_ptest-main_tests.Tpo $(DEPDIR)/coin_ptest-main_tests.Po
#	$(AM_V_CXX) \
#	source='main_tests.cpp' object='coin_ptest-main_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(coin_ptest_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o coin_ptest-main_tests.o `test -f 'main_tests.cpp' || echo '$(srcdir)/'`main_tests.cpp

coin_ptest-main_tests.obj: main_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(coin_ptest_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT coin_ptest-main_tests.obj -MD -MP -MF $(DEPDIR)/coin_ptest-main_tests.Tpo -c -o coin_ptest-main_tests.obj `if test -f 'main_tests.cpp'; then $(CYGPATH_W) 'main_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/main_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/coin_ptest-main_tests.Tpo $(DEPDIR)/coin_ptest-main_tests.Po
#	$(AM_V_CXX) \
#	source='main_tests.cpp' object='coin_ptest-main_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(coin_ptest_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o coin_ptest-main_tests.obj `if test -f 'main_tests.cpp'; then $(CYGPATH_W) 'main_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/main_tests.cpp'; fi`

coin_ptest-UpdateAccount_tests.o: UpdateAccount_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(coin_ptest_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT coin_ptest-UpdateAccount_tests.o -MD -MP -MF $(DEPDIR)/coin_ptest-UpdateAccount_tests.Tpo -c -o coin_ptest-UpdateAccount_tests.o `test -f 'UpdateAccount_tests.cpp' || echo '$(srcdir)/'`UpdateAccount_tests.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/coin_ptest-UpdateAccount_tests.Tpo $(DEPDIR)/coin_ptest-UpdateAccount_tests.Po
#	$(AM_V_CXX) \
#	source='UpdateAccount_tests.cpp' object='coin_ptest-UpdateAccount_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(coin_ptest_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o coin_ptest-UpdateAccount_tests.o `test -f 'UpdateAccount_tests.cpp' || echo '$(srcdir)/'`UpdateAccount_tests.cpp

coin_ptest-UpdateAccount_tests.obj: UpdateAccount_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(coin_ptest_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT coin_ptest-UpdateAccount_tests.obj -MD -MP -MF $(DEPDIR)/coin_ptest-UpdateAccount_tests.Tpo -c -o coin_ptest-UpdateAccount_tests.obj `if test -f 'UpdateAccount_tests.cpp'; then $(CYGPATH_W) 'UpdateAccount_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/UpdateAccount_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/coin_ptest-UpdateAccount_tests.Tpo $(DEPDIR)/coin_ptest-UpdateAccount_tests.Po
#	$(AM_V_CXX) \
#	source='UpdateAccount_tests.cpp' object='coin_ptest-UpdateAccount_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(coin_ptest_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o coin_ptest-UpdateAccount_tests.obj `if test -f 'UpdateAccount_tests.cpp'; then $(CYGPATH_W) 'UpdateAccount_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/UpdateAccount_tests.cpp'; fi`

coin_ptest-mining_tests.o: mining_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(coin_ptest_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT coin_ptest-mining_tests.o -MD -MP -MF $(DEPDIR)/coin_ptest-mining_tests.Tpo -c -o coin_ptest-mining_tests.o `test -f 'mining_tests.cpp' || echo '$(srcdir)/'`mining_tests.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/coin_ptest-mining_tests.Tpo $(DEPDIR)/coin_ptest-mining_tests.Po
#	$(AM_V_CXX) \
#	source='mining_tests.cpp' object='coin_ptest-mining_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(coin_ptest_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o coin_ptest-mining_tests.o `test -f 'mining_tests.cpp' || echo '$(srcdir)/'`mining_tests.cpp

coin_ptest-mining_tests.obj: mining_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(coin_ptest_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT coin_ptest-mining_tests.obj -MD -MP -MF $(DEPDIR)/coin_ptest-mining_tests.Tpo -c -o coin_ptest-mining_tests.obj `if test -f 'mining_tests.cpp'; then $(CYGPATH_W) 'mining_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/mining_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/coin_ptest-mining_tests.Tpo $(DEPDIR)/coin_ptest-mining_tests.Po
#	$(AM_V_CXX) \
#	source='mining_tests.cpp' object='coin_ptest-mining_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(coin_ptest_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o coin_ptest-mining_tests.obj `if test -f 'mining_tests.cpp'; then $(CYGPATH_W) 'mining_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/mining_tests.cpp'; fi`

coin_ptest-create_tx_tests.o: create_tx_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(coin_ptest_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT coin_ptest-create_tx_tests.o -MD -MP -MF $(DEPDIR)/coin_ptest-create_tx_tests.Tpo -c -o coin_ptest-create_tx_tests.o `test -f 'create_tx_tests.cpp' || echo '$(srcdir)/'`create_tx_tests.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/coin_ptest-create_tx_tests.Tpo $(DEPDIR)/coin_ptest-create_tx_tests.Po
#	$(AM_V_CXX) \
#	source='create_tx_tests.cpp' object='coin_ptest-create_tx_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(coin_ptest_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o coin_ptest-create_tx_tests.o `test -f 'create_tx_tests.cpp' || echo '$(srcdir)/'`create_tx_tests.cpp

coin_ptest-create_tx_tests.obj: create_tx_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(coin_ptest_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT coin_ptest-create_tx_tests.obj -MD -MP -MF $(DEPDIR)/coin_ptest-create_tx_tests.Tpo -c -o coin_ptest-create_tx_tests.obj `if test -f 'create_tx_tests.cpp'; then $(CYGPATH_W) 'create_tx_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/create_tx_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/coin_ptest-create_tx_tests.Tpo $(DEPDIR)/coin_ptest-create_tx_tests.Po
#	$(AM_V_CXX) \
#	source='create_tx_tests.cpp' object='coin_ptest-create_tx_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(coin_ptest_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o coin_ptest-create_tx_tests.obj `if test -f 'create_tx_tests.cpp'; then $(CYGPATH_W) 'create_tx_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/create_tx_tests.cpp'; fi`

coin_ptest-black_halo_tests.o: black_halo_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(coin_ptest_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT coin_ptest-black_halo_tests.o -MD -MP -MF $(DEPDIR)/coin_ptest-black_halo_tests.Tpo -c -o coin_ptest-black_halo_tests.o `test -f 'black_halo_tests.cpp' || echo '$(srcdir)/'`black_halo_tests.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/coin_ptest-black_halo_tests.Tpo $(DEPDIR)/coin_ptest-black_halo_tests.Po
#	$(AM_V_CXX) \
#	source='black_halo_tests.cpp' object='coin_ptest-black_halo_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(coin_ptest_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o coin_ptest-black_halo_tests.o `test -f 'black_halo_tests.cpp' || echo '$(srcdir)/'`black_halo_tests.cpp

coin_ptest-black_halo_tests.obj: black_halo_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(coin_ptest_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT coin_ptest-black_halo_tests.obj -MD -MP -MF $(DEPDIR)/coin_ptest-black_halo_tests.Tpo -c -o coin_ptest-black_halo_tests.obj `if test -f 'black_halo_tests.cpp'; then $(CYGPATH_W) 'black_halo_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/black_halo_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/coin_ptest-black_halo_tests.Tpo $(DEPDIR)/coin_ptest-black_halo_tests.Po
#	$(AM_V_CXX) \
#	source='black_halo_tests.cpp' object='coin_ptest-black_halo_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(coin_ptest_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o coin_ptest-black_halo_tests.obj `if test -f 'black_halo_tests.cpp'; then $(CYGPATH_W) 'black_halo_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/black_halo_tests.cpp'; fi`

coin_ptest-anony_tests.o: anony_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(coin_ptest_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT coin_ptest-anony_tests.o -MD -MP -MF $(DEPDIR)/coin_ptest-anony_tests.Tpo -c -o coin_ptest-anony_tests.o `test -f 'anony_tests.cpp' || echo '$(srcdir)/'`anony_tests.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/coin_ptest-anony_tests.Tpo $(DEPDIR)/coin_ptest-anony_tests.Po
#	$(AM_V_CXX) \
#	source='anony_tests.cpp' object='coin_ptest-anony_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(coin_ptest_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o coin_ptest-anony_tests.o `test -f 'anony_tests.cpp' || echo '$(srcdir)/'`anony_tests.cpp

coin_ptest-anony_tests.obj: anony_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(coin_ptest_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT coin_ptest-anony_tests.obj -MD -MP -MF $(DEPDIR)/coin_ptest-anony_tests.Tpo -c -o coin_ptest-anony_tests.obj `if test -f 'anony_tests.cpp'; then $(CYGPATH_W) 'anony_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/anony_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/coin_ptest-anony_tests.Tpo $(DEPDIR)/coin_ptest-anony_tests.Po
#	$(AM_V_CXX) \
#	source='anony_tests.cpp' object='coin_ptest-anony_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(coin_ptest_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o coin_ptest-anony_tests.obj `if test -f 'anony_tests.cpp'; then $(CYGPATH_W) 'anony_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/anony_tests.cpp'; fi`

../test/coin_ptest-systestbase.o: ../test/systestbase.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(coin_ptest_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ../test/coin_ptest-systestbase.o -MD -MP -MF ../test/$(DEPDIR)/coin_ptest-systestbase.Tpo -c -o ../test/coin_ptest-systestbase.o `test -f '../test/systestbase.cpp' || echo '$(srcdir)/'`../test/systestbase.cpp
	$(AM_V_at)$(am__mv) ../test/$(DEPDIR)/coin_ptest-systestbase.Tpo ../test/$(DEPDIR)/coin_ptest-systestbase.Po
#	$(AM_V_CXX) \
#	source='../test/systestbase.cpp' object='../test/coin_ptest-systestbase.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(coin_ptest_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ../test/coin_ptest-systestbase.o `test -f '../test/systestbase.cpp' || echo '$(srcdir)/'`../test/systestbase.cpp

../test/coin_ptest-systestbase.obj: ../test/systestbase.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(coin_ptest_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ../test/coin_ptest-systestbase.obj -MD -MP -MF ../test/$(DEPDIR)/coin_ptest-systestbase.Tpo -c -o ../test/coin_ptest-systestbase.obj `if test -f '../test/systestbase.cpp'; then $(CYGPATH_W) '../test/systestbase.cpp'; else $(CYGPATH_W) '$(srcdir)/../test/systestbase.cpp'; fi`
	$(AM_V_at)$(am__mv) ../test/$(DEPDIR)/coin_ptest-systestbase.Tpo ../test/$(DEPDIR)/coin_ptest-systestbase.Po
#	$(AM_V_CXX) \
#	source='../test/systestbase.cpp' object='../test/coin_ptest-systestbase.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(coin_ptest_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ../test/coin_ptest-systestbase.obj `if test -f '../test/systestbase.cpp'; then $(CYGPATH_W) '../test/systestbase.cpp'; else $(CYGPATH_W) '$(srcdir)/../test/systestbase.cpp'; fi`

coin_ptest-cycle_sesure_trade_tests.o: cycle_sesure_trade_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(coin_ptest_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT coin_ptest-cycle_sesure_trade_tests.o -MD -MP -MF $(DEPDIR)/coin_ptest-cycle_sesure_trade_tests.Tpo -c -o coin_ptest-cycle_sesure_trade_tests.o `test -f 'cycle_sesure_trade_tests.cpp' || echo '$(srcdir)/'`cycle_sesure_trade_tests.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/coin_ptest-cycle_sesure_trade_tests.Tpo $(DEPDIR)/coin_ptest-cycle_sesure_trade_tests.Po
#	$(AM_V_CXX) \
#	source='cycle_sesure_trade_tests.cpp' object='coin_ptest-cycle_sesure_trade_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(coin_ptest_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o coin_ptest-cycle_sesure_trade_tests.o `test -f 'cycle_sesure_trade_tests.cpp' || echo '$(srcdir)/'`cycle_sesure_trade_tests.cpp

coin_ptest-cycle_sesure_trade_tests.obj: cycle_sesure_trade_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(coin_ptest_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT coin_ptest-cycle_sesure_trade_tests.obj -MD -MP -MF $(DEPDIR)/coin_ptest-cycle_sesure_trade_tests.Tpo -c -o coin_ptest-cycle_sesure_trade_tests.obj `if test -f 'cycle_sesure_trade_tests.cpp'; then $(CYGPATH_W) 'cycle_sesure_trade_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/cycle_sesure_trade_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/coin_ptest-cycle_sesure_trade_tests.Tpo $(DEPDIR)/coin_ptest-cycle_sesure_trade_tests.Po
#	$(AM_V_CXX) \
#	source='cycle_sesure_trade_tests.cpp' object='coin_ptest-cycle_sesure_trade_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(coin_ptest_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o coin_ptest-cycle_sesure_trade_tests.obj `if test -f 'cycle_sesure_trade_tests.cpp'; then $(CYGPATH_W) 'cycle_sesure_trade_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/cycle_sesure_trade_tests.cpp'; fi`

coin_ptest-cycle_test_base.o: cycle_test_base.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(coin_ptest_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT coin_ptest-cycle_test_base.o -MD -MP -MF $(DEPDIR)/coin_ptest-cycle_test_base.Tpo -c -o coin_ptest-cycle_test_base.o `test -f 'cycle_test_base.cpp' || echo '$(srcdir)/'`cycle_test_base.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/coin_ptest-cycle_test_base.Tpo $(DEPDIR)/coin_ptest-cycle_test_base.Po
#	$(AM_V_CXX) \
#	source='cycle_test_base.cpp' object='coin_ptest-cycle_test_base.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(coin_ptest_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o coin_ptest-cycle_test_base.o `test -f 'cycle_test_base.cpp' || echo '$(srcdir)/'`cycle_test_base.cpp

coin_ptest-cycle_test_base.obj: cycle_test_base.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(coin_ptest_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT coin_ptest-cycle_test_base.obj -MD -MP -MF $(DEPDIR)/coin_ptest-cycle_test_base.Tpo -c -o coin_ptest-cycle_test_base.obj `if test -f 'cycle_test_base.cpp'; then $(CYGPATH_W) 'cycle_test_base.cpp'; else $(CYGPATH_W) '$(srcdir)/cycle_test_base.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/coin_ptest-cycle_test_base.Tpo $(DEPDIR)/coin_ptest-cycle_test_base.Po
#	$(AM_V_CXX) \
#	source='cycle_test_base.cpp' object='coin_ptest-cycle_test_base.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(coin_ptest_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o coin_ptest-cycle_test_base.obj `if test -f 'cycle_test_base.cpp'; then $(CYGPATH_W) 'cycle_test_base.cpp'; else $(CYGPATH_W) '$(srcdir)/cycle_test_base.cpp'; fi`

coin_ptest-cycle_test_manger.o: cycle_test_manger.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(coin_ptest_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT coin_ptest-cycle_test_manger.o -MD -MP -MF $(DEPDIR)/coin_ptest-cycle_test_manger.Tpo -c -o coin_ptest-cycle_test_manger.o `test -f 'cycle_test_manger.cpp' || echo '$(srcdir)/'`cycle_test_manger.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/coin_ptest-cycle_test_manger.Tpo $(DEPDIR)/coin_ptest-cycle_test_manger.Po
#	$(AM_V_CXX) \
#	source='cycle_test_manger.cpp' object='coin_ptest-cycle_test_manger.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(coin_ptest_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o coin_ptest-cycle_test_manger.o `test -f 'cycle_test_manger.cpp' || echo '$(srcdir)/'`cycle_test_manger.cpp

coin_ptest-cycle_test_manger.obj: cycle_test_manger.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(coin_ptest_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT coin_ptest-cycle_test_manger.obj -MD -MP -MF $(DEPDIR)/coin_ptest-cycle_test_manger.Tpo -c -o coin_ptest-cycle_test_manger.obj `if test -f 'cycle_test_manger.cpp'; then $(CYGPATH_W) 'cycle_test_manger.cpp'; else $(CYGPATH_W) '$(srcdir)/cycle_test_manger.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/coin_ptest-cycle_test_manger.Tpo $(DEPDIR)/coin_ptest-cycle_test_manger.Po
#	$(AM_V_CXX) \
#	source='cycle_test_manger.cpp' object='coin_ptest-cycle_test_manger.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(coin_ptest_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o coin_ptest-cycle_test_manger.obj `if test -f 'cycle_test_manger.cpp'; then $(CYGPATH_W) 'cycle_test_manger.cpp'; else $(CYGPATH_W) '$(srcdir)/cycle_test_manger.cpp'; fi`

coin_ptest-cycle_p2p_bet_tests.o: cycle_p2p_bet_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(coin_ptest_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT coin_ptest-cycle_p2p_bet_tests.o -MD -MP -MF $(DEPDIR)/coin_ptest-cycle_p2p_bet_tests.Tpo -c -o coin_ptest-cycle_p2p_bet_tests.o `test -f 'cycle_p2p_bet_tests.cpp' || echo '$(srcdir)/'`cycle_p2p_bet_tests.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/coin_ptest-cycle_p2p_bet_tests.Tpo $(DEPDIR)/coin_ptest-cycle_p2p_bet_tests.Po
#	$(AM_V_CXX) \
#	source='cycle_p2p_bet_tests.cpp' object='coin_ptest-cycle_p2p_bet_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(coin_ptest_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o coin_ptest-cycle_p2p_bet_tests.o `test -f 'cycle_p2p_bet_tests.cpp' || echo '$(srcdir)/'`cycle_p2p_bet_tests.cpp

coin_ptest-cycle_p2p_bet_tests.obj: cycle_p2p_bet_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(coin_ptest_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT coin_ptest-cycle_p2p_bet_tests.obj -MD -MP -MF $(DEPDIR)/coin_ptest-cycle_p2p_bet_tests.Tpo -c -o coin_ptest-cycle_p2p_bet_tests.obj `if test -f 'cycle_p2p_bet_tests.cpp'; then $(CYGPATH_W) 'cycle_p2p_bet_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/cycle_p2p_bet_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/coin_ptest-cycle_p2p_bet_tests.Tpo $(DEPDIR)/coin_ptest-cycle_p2p_bet_tests.Po
#	$(AM_V_CXX) \
#	source='cycle_p2p_bet_tests.cpp' object='coin_ptest-cycle_p2p_bet_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(coin_ptest_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o coin_ptest-cycle_p2p_bet_tests.obj `if test -f 'cycle_p2p_bet_tests.cpp'; then $(CYGPATH_W) 'cycle_p2p_bet_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/cycle_p2p_bet_tests.cpp'; fi`

coin_ptest-create_minter_key_tests.o: create_minter_key_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(coin_ptest_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT coin_ptest-create_minter_key_tests.o -MD -MP -MF $(DEPDIR)/coin_ptest-create_minter_key_tests.Tpo -c -o coin_ptest-create_minter_key_tests.o `test -f 'create_minter_key_tests.cpp' || echo '$(srcdir)/'`create_minter_key_tests.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/coin_ptest-create_minter_key_tests.Tpo $(DEPDIR)/coin_ptest-create_minter_key_tests.Po
#	$(AM_V_CXX) \
#	source='create_minter_key_tests.cpp' object='coin_ptest-create_minter_key_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(coin_ptest_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o coin_ptest-create_minter_key_tests.o `test -f 'create_minter_key_tests.cpp' || echo '$(srcdir)/'`create_minter_key_tests.cpp

coin_ptest-create_minter_key_tests.obj: create_minter_key_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(coin_ptest_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT coin_ptest-create_minter_key_tests.obj -MD -MP -MF $(DEPDIR)/coin_ptest-create_minter_key_tests.Tpo -c -o coin_ptest-create_minter_key_tests.obj `if test -f 'create_minter_key_tests.cpp'; then $(CYGPATH_W) 'create_minter_key_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/create_minter_key_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/coin_ptest-create_minter_key_tests.Tpo $(DEPDIR)/coin_ptest-create_minter_key_tests.Po
#	$(AM_V_CXX) \
#	source='create_minter_key_tests.cpp' object='coin_ptest-create_minter_key_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(coin_ptest_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o coin_ptest-create_minter_key_tests.obj `if test -f 'create_minter_key_tests.cpp'; then $(CYGPATH_W) 'create_minter_key_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/create_minter_key_tests.cpp'; fi`

coin_ptest-ipo_tests.o: ipo_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(coin_ptest_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT coin_ptest-ipo_tests.o -MD -MP -MF $(DEPDIR)/coin_ptest-ipo_tests.Tpo -c -o coin_ptest-ipo_tests.o `test -f 'ipo_tests.cpp' || echo '$(srcdir)/'`ipo_tests.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/coin_ptest-ipo_tests.Tpo $(DEPDIR)/coin_ptest-ipo_tests.Po
#	$(AM_V_CXX) \
#	source='ipo_tests.cpp' object='coin_ptest-ipo_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(coin_ptest_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o coin_ptest-ipo_tests.o `test -f 'ipo_tests.cpp' || echo '$(srcdir)/'`ipo_tests.cpp

coin_ptest-ipo_tests.obj: ipo_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(coin_ptest_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT coin_ptest-ipo_tests.obj -MD -MP -MF $(DEPDIR)/coin_ptest-ipo_tests.Tpo -c -o coin_ptest-ipo_tests.obj `if test -f 'ipo_tests.cpp'; then $(CYGPATH_W) 'ipo_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/ipo_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/coin_ptest-ipo_tests.Tpo $(DEPDIR)/coin_ptest-ipo_tests.Po
#	$(AM_V_CXX) \
#	source='ipo_tests.cpp' object='coin_ptest-ipo_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(coin_ptest_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o coin_ptest-ipo_tests.obj `if test -f 'ipo_tests.cpp'; then $(CYGPATH_W) 'ipo_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/ipo_tests.cpp'; fi`

coin_ptest-red_packet_tests.o: red_packet_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(coin_ptest_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT coin_ptest-red_packet_tests.o -MD -MP -MF $(DEPDIR)/coin_ptest-red_packet_tests.Tpo -c -o coin_ptest-red_packet_tests.o `test -f 'red_packet_tests.cpp' || echo '$(srcdir)/'`red_packet_tests.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/coin_ptest-red_packet_tests.Tpo $(DEPDIR)/coin_ptest-red_packet_tests.Po
#	$(AM_V_CXX) \
#	source='red_packet_tests.cpp' object='coin_ptest-red_packet_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(coin_ptest_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o coin_ptest-red_packet_tests.o `test -f 'red_packet_tests.cpp' || echo '$(srcdir)/'`red_packet_tests.cpp

coin_ptest-red_packet_tests.obj: red_packet_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(coin_ptest_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT coin_ptest-red_packet_tests.obj -MD -MP -MF $(DEPDIR)/coin_ptest-red_packet_tests.Tpo -c -o coin_ptest-red_packet_tests.obj `if test -f 'red_packet_tests.cpp'; then $(CYGPATH_W) 'red_packet_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/red_packet_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/coin_ptest-red_packet_tests.Tpo $(DEPDIR)/coin_ptest-red_packet_tests.Po
#	$(AM_V_CXX) \
#	source='red_packet_tests.cpp' object='coin_ptest-red_packet_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(coin_ptest_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o coin_ptest-red_packet_tests.obj `if test -f 'red_packet_tests.cpp'; then $(CYGPATH_W) 'red_packet_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/red_packet_tests.cpp'; fi`

coin_ptest-guarantee_tests.o: guarantee_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(coin_ptest_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT coin_ptest-guarantee_tests.o -MD -MP -MF $(DEPDIR)/coin_ptest-guarantee_tests.Tpo -c -o coin_ptest-guarantee_tests.o `test -f 'guarantee_tests.cpp' || echo '$(srcdir)/'`guarantee_tests.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/coin_ptest-guarantee_tests.Tpo $(DEPDIR)/coin_ptest-guarantee_tests.Po
#	$(AM_V_CXX) \
#	source='guarantee_tests.cpp' object='coin_ptest-guarantee_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(coin_ptest_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o coin_ptest-guarantee_tests.o `test -f 'guarantee_tests.cpp' || echo '$(srcdir)/'`guarantee_tests.cpp

coin_ptest-guarantee_tests.obj: guarantee_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(coin_ptest_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT coin_ptest-guarantee_tests.obj -MD -MP -MF $(DEPDIR)/coin_ptest-guarantee_tests.Tpo -c -o coin_ptest-guarantee_tests.obj `if test -f 'guarantee_tests.cpp'; then $(CYGPATH_W) 'guarantee_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/guarantee_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/coin_ptest-guarantee_tests.Tpo $(DEPDIR)/coin_ptest-guarantee_tests.Po
#	$(AM_V_CXX) \
#	source='guarantee_tests.cpp' object='coin_ptest-guarantee_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(coin_ptest_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o coin_ptest-guarantee_tests.obj `if test -f 'guarantee_tests.cpp'; then $(CYGPATH_W) 'guarantee_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/guarantee_tests.cpp'; fi`

coin_ptest-lashou_tests.o: lashou_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(coin_ptest_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT coin_ptest-lashou_tests.o -MD -MP -MF $(DEPDIR)/coin_ptest-lashou_tests.Tpo -c -o coin_ptest-lashou_tests.o `test -f 'lashou_tests.cpp' || echo '$(srcdir)/'`lashou_tests.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/coin_ptest-lashou_tests.Tpo $(DEPDIR)/coin_ptest-lashou_tests.Po
#	$(AM_V_CXX) \
#	source='lashou_tests.cpp' object='coin_ptest-lashou_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(coin_ptest_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o coin_ptest-lashou_tests.o `test -f 'lashou_tests.cpp' || echo '$(srcdir)/'`lashou_tests.cpp

coin_ptest-lashou_tests.obj: lashou_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(coin_ptest_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT coin_ptest-lashou_tests.obj -MD -MP -MF $(DEPDIR)/coin_ptest-lashou_tests.Tpo -c -o coin_ptest-lashou_tests.obj `if test -f 'lashou_tests.cpp'; then $(CYGPATH_W) 'lashou_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/lashou_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/coin_ptest-lashou_tests.Tpo $(DEPDIR)/coin_ptest-lashou_tests.Po
#	$(AM_V_CXX) \
#	source='lashou_tests.cpp' object='coin_ptest-lashou_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(coin_ptest_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o coin_ptest-lashou_tests.obj `if test -f 'lashou_tests.cpp'; then $(CYGPATH_W) 'lashou_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/lashou_tests.cpp'; fi`

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	set x; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

check-TESTS: $(TESTS)
	@failed=0; all=0; xfail=0; xpass=0; skip=0; \
	srcdir=$(srcdir); export srcdir; \
	list=' $(TESTS) '; \
	$(am__tty_colors); \
	if test -n "$$list"; then \
	  for tst in $$list; do \
	    if test -f ./$$tst; then dir=./; \
	    elif test -f $$tst; then dir=; \
	    else dir="$(srcdir)/"; fi; \
	    if $(TESTS_ENVIRONMENT) $${dir}$$tst; then \
	      all=`expr $$all + 1`; \
	      case " $(XFAIL_TESTS) " in \
	      *[\ \	]$$tst[\ \	]*) \
		xpass=`expr $$xpass + 1`; \
		failed=`expr $$failed + 1`; \
		col=$$red; res=XPASS; \
	      ;; \
	      *) \
		col=$$grn; res=PASS; \
	      ;; \
	      esac; \
	    elif test $$? -ne 77; then \
	      all=`expr $$all + 1`; \
	      case " $(XFAIL_TESTS) " in \
	      *[\ \	]$$tst[\ \	]*) \
		xfail=`expr $$xfail + 1`; \
		col=$$lgn; res=XFAIL; \
	      ;; \
	      *) \
		failed=`expr $$failed + 1`; \
		col=$$red; res=FAIL; \
	      ;; \
	      esac; \
	    else \
	      skip=`expr $$skip + 1`; \
	      col=$$blu; res=SKIP; \
	    fi; \
	    echo "$${col}$$res$${std}: $$tst"; \
	  done; \
	  if test "$$all" -eq 1; then \
	    tests="test"; \
	    All=""; \
	  else \
	    tests="tests"; \
	    All="All "; \
	  fi; \
	  if test "$$failed" -eq 0; then \
	    if test "$$xfail" -eq 0; then \
	      banner="$$All$$all $$tests passed"; \
	    else \
	      if test "$$xfail" -eq 1; then failures=failure; else failures=failures; fi; \
	      banner="$$All$$all $$tests behaved as expected ($$xfail expected $$failures)"; \
	    fi; \
	  else \
	    if test "$$xpass" -eq 0; then \
	      banner="$$failed of $$all $$tests failed"; \
	    else \
	      if test "$$xpass" -eq 1; then passes=pass; else passes=passes; fi; \
	      banner="$$failed of $$all $$tests did not behave as expected ($$xpass unexpected $$passes)"; \
	    fi; \
	  fi; \
	  dashes="$$banner"; \
	  skipped=""; \
	  if test "$$skip" -ne 0; then \
	    if test "$$skip" -eq 1; then \
	      skipped="($$skip test was not run)"; \
	    else \
	      skipped="($$skip tests were not run)"; \
	    fi; \
	    test `echo "$$skipped" | wc -c` -le `echo "$$banner" | wc -c` || \
	      dashes="$$skipped"; \
	  fi; \
	  report=""; \
	  if test "$$failed" -ne 0 && test -n "$(PACKAGE_BUGREPORT)"; then \
	    report="Please report to $(PACKAGE_BUGREPORT)"; \
	    test `echo "$$report" | wc -c` -le `echo "$$banner" | wc -c` || \
	      dashes="$$report"; \
	  fi; \
	  dashes=`echo "$$dashes" | sed s/./=/g`; \
	  if test "$$failed" -eq 0; then \
	    echo "$$grn$$dashes"; \
	  else \
	    echo "$$red$$dashes"; \
	  fi; \
	  echo "$$banner"; \
	  test -z "$$skipped" || echo "$$skipped"; \
	  test -z "$$report" || echo "$$report"; \
	  echo "$$dashes$$std"; \
	  test "$$failed" -eq 0; \
	else :; fi

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
	$(MAKE) $(AM_MAKEFLAGS) check-TESTS
check: check-am
all-am: Makefile $(PROGRAMS)
installdirs:
	for dir in "$(DESTDIR)$(bindir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)
	-rm -f ../test/$(DEPDIR)/$(am__dirstamp)
	-rm -f ../test/$(am__dirstamp)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-binPROGRAMS clean-generic mostlyclean-am

distclean: distclean-am
	-rm -rf ../test/$(DEPDIR) ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am:

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am: install-binPROGRAMS

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ../test/$(DEPDIR) ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-binPROGRAMS

.MAKE: check-am install-am install-strip

.PHONY: CTAGS GTAGS all all-am check check-TESTS check-am clean \
	clean-binPROGRAMS clean-generic ctags distclean \
	distclean-compile distclean-generic distclean-tags distdir dvi \
	dvi-am html html-am info info-am install install-am \
	install-binPROGRAMS install-data install-data-am install-dvi \
	install-dvi-am install-exec install-exec-am install-html \
	install-html-am install-info install-info-am install-man \
	install-pdf install-pdf-am install-ps install-ps-am \
	install-strip installcheck installcheck-am installdirs \
	maintainer-clean maintainer-clean-generic mostlyclean \
	mostlyclean-compile mostlyclean-generic pdf pdf-am ps ps-am \
	tags uninstall uninstall-am uninstall-binPROGRAMS


$(LIBBITCOIN):
	$(MAKE) -C $(top_builddir)/src $(@F)

$(LIBLEVELDB) $(LIBMEMENV):
#	$(MAKE) -C $(top_builddir)/src leveldb/$(@F)

$(LIBBITCOINQT):
	$(MAKE) -C $(top_builddir)/src/qt $(@F)

.mm.o:
	$(OBJC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	  $(CPPFLAGS) $(AM_CXXFLAGS) $(QT_INCLUDES) $(CXXFLAGS)  -c -o $@ $<

.rc.o:
	@test -f $(WINDRES) && $(WINDRES) -i $< -o $@ || \
          echo error: could not build $@

ui_%.h: %.ui
	@test -d $(abs_builddir)/$(@D) || $(MKDIR_P) $(abs_builddir)/$(@D)
	@test -f $(UIC) && QT_SELECT=$(QT_SELECT) $(UIC) -o $(abs_builddir)/$@ $(abs_srcdir)/$< || echo error: could not build $(abs_builddir)/$@
	$(SED) -e '/^\*\*.*Created:/d' $(abs_builddir)/$@ > $(abs_builddir)/$@.n && mv $(abs_builddir)/$@{.n,}
	$(SED) -e '/^\*\*.*by:/d' $(abs_builddir)/$@ > $(abs_builddir)/$@.n && mv $(abs_builddir)/$@{.n,}

%.moc: %.cpp
	QT_SELECT=$(QT_SELECT) $(MOC) $(QT_INCLUDES) $(MOC_DEFS) -o $@ $<
	$(SED) -e '/^\*\*.*Created:/d' $@ > $@.n && mv $@{.n,}
	$(SED) -e '/^\*\*.*by:/d' $@ > $@.n && mv $@{.n,}

moc_%.cpp: %.h
	QT_SELECT=$(QT_SELECT) $(MOC) $(QT_INCLUDES) $(MOC_DEFS) -o $@ $<
	$(SED) -e '/^\*\*.*Created:/d' $@ > $@.n && mv $@{.n,}
	$(SED) -e '/^\*\*.*by:/d' $@ > $@.n && mv $@{.n,}

%.qm: %.ts
	@test -d $(abs_builddir)/$(@D) || $(MKDIR_P) $(abs_builddir)/$(@D)
	@test -f $(LRELEASE) && QT_SELECT=$(QT_SELECT) $(LRELEASE) $(abs_srcdir)/$< -qm $(abs_builddir)/$@ || \
	 echo error: could not build $(abs_builddir)/$@

%.pb.cc %.pb.h: %.proto
	test -f $(PROTOC) && $(PROTOC) --cpp_out=$(@D) --proto_path=$(abspath $(<D) $<)  || \
	  echo error: could not build $@

%.json.h: %.json
	@$(MKDIR_P) $(@D)
	@echo "namespace json_tests{" > $@
	@echo "static unsigned const char $(*F)[] = {" >> $@
	@$(HEXDUMP) -v -e '8/1 "0x%02x, "' -e '"\n"' $< | $(SED) -e 's/0x  ,//g' >> $@
	@echo "};};" >> $@
	@echo "Generated $@"

%.raw.h: %.raw
	@$(MKDIR_P) $(@D)
	@echo "namespace alert_tests{" > $@
	@echo "static unsigned const char $(*F)[] = {" >> $@
	@$(HEXDUMP) -v -e '8/1 "0x%02x, "' -e '"\n"' $< | $(SED) -e 's/0x  ,//g' >> $@
	@echo "};};" >> $@
	@echo "Generated $@"

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
